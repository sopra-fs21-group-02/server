# Authenticate first
POST {{backend-url}}/v1/users/login
Content-Type: application/json

{
    "tokenId": "{{token}}",
    "emailId": "{{email}}"
}

> {%
 client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

 client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});

 client.test("Response contains user access details", function () {
     client.assert(response.body.accessToken, "AccessToken must not be null or empty.");
     client.assert(response.body.accessTokenExpiry, "accessTokenExpiry must not be null or empty.");
     client.assert(!response.body.isNewUser, "It's not a new user");
     client.assert(response.body.userId, "userId must not be null or empty.");
 })

 client.global.set("userId", response.body.userId);
 %}
###
# Check the current dogs list size
GET {{backend-url}}/v1/users/{{userId}}

> {%
    client.log("Current list of dogs: " + response.body.dogs);
    client.global.set("dogsListSize", response.body.dogs.length );
 %}
###
# Let's create a dog

POST {{backend-url}}/v1/users/{{userId}}/dogs/
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="dogDto"; filename="data.json"
Content-Type: application/json

< ./request-form-data.json

--WebAppBoundary
Content-Disposition: form-data; name="profilePicture"; filename="test.png"
Content-Type: image/png

< ./test_img.png

--WebAppBoundary--

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

###
GET {{backend-url}}/v1/users/{{userId}}

> {%
 client.test("Check if the new dog is included", function (){
     client.assert(response.body.dogs.length === client.global.get("dogsListSize")+1 );
 });
 %}
